{"version":3,"sources":["images/MockedIn.png","images/ExpensesTrackerApp.png","images/TicTacToe.png","images/GivngApp.png","images/Portfolio.png","components/Home.js","components/Nav.js","components/Card.js","components/About.js","components/Footer.js","components/ProjectCard.js","components/Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","className","Nav","to","Card","style","children","About","alt","Footer","useState","showEmail","setShowEmail","setToggle","href","target","rel","onClick","ProjectCard","backgroundImage","project","img","name","description","techStack","action","github","type","value","deployed","Projects","projects","id","require","map","key","App","basename","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.63a083b0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MockedIn.65a233a3.png\";","module.exports = __webpack_public_path__ + \"static/media/ExpensesTrackerApp.01b40d88.png\";","module.exports = __webpack_public_path__ + \"static/media/TicTacToe.52dd46b3.png\";","module.exports = __webpack_public_path__ + \"static/media/GivngApp.2b9316d6.png\";","module.exports = __webpack_public_path__ + \"static/media/Portfolio.44df9778.png\";","import React from \"react\";\n\nimport \"./Home.css\";\nconst Home = props => {\n  return (\n    <div className=\"home-content\">\n      <div className=\"home-content__text\">\n        <h1>Paulo Amaral</h1>\n        <p>\n          Junior Front-end\n          <br />\n          Web Developer\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nimport \"./Nav.css\";\nconst Nav = props => {\n  return (\n    <div className=\"nav-links\">\n      <div className=\"nav-links__group\">\n        <Link className=\"nav-links__link\" to=\"/\">\n          <span>Home</span>\n        </Link>\n        <span className=\"nav-links__link\"> - </span>\n        <Link className=\"nav-links__link\" to=\"/about\">\n          <span>About</span>\n        </Link>\n        <span className=\"nav-links__link\"> - </span>\n        <Link className=\"nav-links__link\" to=\"/projects\">\n          <span>Projects</span>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\n\nimport \"./Card.css\";\nconst Card = props => {\n  return (\n    <div className={`main-card`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./About.css\";\nconst About = props => {\n  return (\n    <div className=\"about-content\">\n      <div className=\"img-box\">\n        <img alt=\"\" className=\"img-box__avatar\"></img>\n      </div>\n      <div className=\"about-content__text\">\n        <h1>About</h1>\n        <p>\n          I'm a Sydney based Junior Web Developer with a background in finance\n          and logistics.\n        </p>\n        <p>\n          Problem-solving, creativity, and logical thinking are my natural\n          skills, and Tech is my passion. Software Engineering grounds is where\n          I can bring them together to build awesome things.\n        </p>\n        <p>\n          I love working on projects, by myself or in a team, learning new\n          things is a never-ending task to me.\n        </p>\n        <p>\n          Please feel free to reach me out if you want to know even more about\n          me. I'd love to hear from you.\n        </p>\n        <p>Thank you for visiting my portfolio page.</p>\n        <h3>Skills</h3>\n        <p className=\"about-content__text-skills\">\n          HTML/CSS | JAVASCRIPT | REACT | EXPRESS | NODE | MONGO DB|\n          RUBY-ON-RAILS | SQL/POSTGRES | JQUERY | BOOTSTRAP | HEROKU\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","import React, { useState } from \"react\";\nimport { FaGithubSquare, FaLinkedin, FaEnvelopeSquare } from \"react-icons/fa\";\n\nimport \"./Footer.css\";\n\nconst Footer = () => {\n  const [showEmail, setShowEmail] = useState(\"footer-items__email-hide\");\n  const [toggle, setToggle] = useState(false);\n\n  const toggleEmail = () => {\n    if (\n      showEmail === \"footer-items__email-hide\" ||\n      showEmail === \"footer-items__email-out\"\n    ) {\n      setShowEmail(\"footer-items__email\");\n      setToggle(true);\n    } else {\n      setShowEmail(\"footer-items__email-out\");\n      setToggle(false);\n    }\n  };\n\n  return (\n    <div className=\"footer\">\n      <div className=\"footer-items\">\n        <a\n          href=\"https://github.com/phfa26\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <FaGithubSquare className=\"footer-items__icon\" />\n        </a>\n        <a\n          href=\"https://www.linkedin.com/in/phfamaral/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <FaLinkedin className=\"footer-items__icon\" />\n        </a>\n        <FaEnvelopeSquare\n          className=\"footer-items__icon\"\n          onClick={toggleEmail}\n        />\n      </div>\n      <span className={showEmail}>paulo@amaral.com.au</span>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nimport \"./ProjectCard.css\";\n\nconst ProjectCard = props => {\n  return (\n    <div className=\"wrapper\">\n      <div className=\"cols\">\n        <div className=\"col\">\n          <div className=\"container\">\n            <div\n              className=\"front\"\n              style={{\n                backgroundImage: `url(${props.project.img})`\n              }}\n            >\n              <div className=\"inner\">\n                <p>{props.project.name}</p>\n                {/* <span>Lorem ipsum</span> */}\n              </div>\n            </div>\n            <div className=\"back\">\n              <div className=\"inner\">\n                <p className=\"inner-text__description\">\n                  {props.project.description}\n                </p>\n                <p className=\"inner-text__tech\">{props.project.techStack}</p>\n\n                <div className=\"back-buttons\">\n                  <form\n                    className=\"back-buttons__button\"\n                    action={props.project.github}\n                    target=\"_blank\"\n                  >\n                    <input type=\"submit\" value=\"</> Code\" />\n                  </form>\n                  <form\n                    className=\"back-buttons__button\"\n                    action={props.project.deployed}\n                    target=\"_blank\"\n                  >\n                    <input type=\"submit\" value={\"Live demo\"} />\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectCard;\n","import React from \"react\";\n\nimport \"./Projects.css\";\nimport ProjectCard from \"./ProjectCard\";\n\nconst Projects = () => {\n  const projects = [\n    {\n      id: 4,\n      name: \"MockedIn\",\n      img: require(\"../images/MockedIn.png\"),\n      description:\n        \"Want to see how it's going to look on LinkedIn before posting it on there? Need it to be reviewed by a recruiter/advisor before? Don't panic. MockedIn is the tool for you!\",\n      github: \"https://github.com/phfa26/MockedIn-project-3\",\n      deployed: \"https://mockedin.herokuapp.com/auth\",\n      techStack:\n        \"React | Node | Express | JavaScript | HTML/CSS/SASS | MongoDB | AWS-S3 | GitHub | Heroku\"\n    },\n    {\n      id: 1,\n      name: \"Expenses Tracker App\",\n      img: require(\"../images/ExpensesTrackerApp.png\"),\n      description:\n        \"Keep track of daily expenses. Manage and group them in custom categories and never forget where you have spent those pennies again.\",\n      github: \"https://github.com/phfa26/ExpensesTrackerApp\",\n      deployed: \"https://my-expenses-tracker-project.herokuapp.com/\",\n      techStack: \"Ruby-on-Rails | HTML/CSS | Bootstrap | PostgreSQL | Heroku\"\n    },\n    {\n      id: 0,\n      name: \"Skulls & Bones\",\n      img: require(\"../images/TicTacToe.png\"),\n      description:\n        \"Pick your token and have fun playing this Tic-Tac-Toe game.\",\n      github: \"https://github.com/phfa26/ticTacToeGame\",\n      deployed: \"https://phfa26.github.io/ticTacToeGame/\",\n      techStack: \"JavaScript | JQuery | HTML/CSS | Bootstrap | GitHub - Pages\"\n    },\n\n    {\n      id: 2,\n      name: \"Givng\",\n      img: require(\"../images/GivngApp.png\"),\n      description:\n        \"It is giving time and you don't know how to organise your list and split budget? Let Givng Giv you a hand. A gift-list organiser for every occasion.\",\n      github: \"https://github.com/phfa26/project-2\",\n      deployed: \"https://givng.herokuapp.com/\",\n      techStack:\n        \"ReactJS | JavaScript | Ruby-on-Rails | HTML/ CSS | Bootstrap | PostgreSQL | GitHub | Heroku\"\n    },\n    {\n      id: 3,\n      name: \"Portfolio\",\n      img: require(\"../images/Portfolio.png\"),\n      description:\n        \"This portfolio is a personal project. But still a project nevertheless. Suggestions are welcome, as it seems never to be ready! :)\",\n      github: \"https://github.com/phfa26/MyPortfolio\",\n      deployed: \"https://www.pauloamaral.com.au\",\n      techStack: \"React | JavaScript | HTML/CSS | GitHub - Pages\"\n    }\n  ];\n\n  return (\n    <div className=\"projects-container\">\n      <h1>Projects</h1>\n\n      {projects.map(project => (\n        <ProjectCard key={project.id} project={project} />\n      ))}\n    </div>\n  );\n};\n\nexport default Projects;\n","import React from \"react\";\nimport { Router } from \"@reach/router\";\n\nimport Home from \"./components/Home\";\nimport Nav from \"./components/Nav\";\nimport Card from \"./components/Card\";\nimport About from \"./components/About\";\nimport Footer from \"./components/Footer\";\nimport Projects from \"./components/Projects\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Card>\n        <Router basename=\"/MyPortfolio\">\n          <Home path=\"/\" />\n          <About path=\"/about\" />\n          <Projects path=\"/projects\" />\n        </Router>\n      </Card>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}